package main

import (
	"bytes"
	"encoding/json"
	"html/template"
	"io/ioutil"
	"log"
	"net/http"
)

func main() {
	// Create a new instance of the http.Client
	client := &http.Client{}

	// Create a RequestData struct with some data
	requestData := RequestData{
		Name: "John",
	}

	// Encode the RequestData struct as JSON
	requestBody, err := json.Marshal(requestData)
	if err != nil {
		log.Fatal(err)
	}

	// Create a new HTTP request
	req, err := http.NewRequest("POST", "http://localhost:8080/api/data", bytes.NewBuffer(requestBody))
	if err != nil {
		log.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")

	// Send the HTTP request and get the response
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()

	// Read the response body
	responseBody, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}

	// Decode the JSON response body into a ResponseData struct
	var responseData ResponseData
	err = json.Unmarshal(responseBody, &responseData)
	if err != nil {
		log.Fatal(err)
	}

	tmplPath := "./template.html"

	tmpl, err := template.ParseFiles(tmplPath)

	if err != nil {
		log.Fatal(err)
	}
	err = tmpl.Execute(w, responseData)

	if err != nil {
		log.Fatal(err)
	}
}
